<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr" lang="fr">

<head>
    <title>
        Animation_frequence-amplitude_v1d
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <script src="../Misc/anim_freq_ampl_oscillo_v02_05.js" type="text/javascript">
    </script>
<style>
/*
Styles for the FET Electrotenique epub
used for the epub generated by the Publiwide paltform
and improved by the josmet python epub programm
*/
.fet_tableau_constantes{
    margin-left: 35px;
    border-collapse: collapse;
    font-family: comic sans ms;
    font-size: 14px;
}
.fet_tableau_constantes_entete{
    border: 1px solid black;
    padding: 5px;
    text-align: center;
    background-color: #cccccc
}
.fet_tableau_constantes_ligne{
    border: 1px solid black;
    padding: 5px;
    text-align: center;
    background-color: #f3f3f3
}

.fet_tableau {
    display: table;
    width: 100% ;
    margin: 1px;
    padding: 1px;
}
.fet_ligne {
	display: table-row;
	margin: 1px;
	padding: 1px;
}
.fet_cellule {
	display: table-cell;
	margin: 1px;
	padding: 10px;
	vertical-align: middle;
	text-align: left;
}
.fet_cellule_w60 {
	display: table-cell;
	width: 60% ;
	margin: 1px;
	padding: 10px;
	vertical-align: top;
	text-align: center;
}
.fet_cellule_w45 {
	display: table-cell;
	width: 45% ;
	margin: 1px;
	padding: 10px;
	vertical-align: top;
	text-align: center;
}
.fet_cellule_w35 {
	display: table-cell;
	width: 35% ;
	margin: 1px;
	padding: 10px;
	vertical-align: middle;
	text-align: center;
}
.fet_cellule_w28 {
	display: table-cell;
	width: 28% ;
	margin: 1px;
	padding: 10px;
	vertical-align: middle;
	text-align: center;
}
.fet_cellule_cadre_entete {
	display: table-cell;
	margin: 1px;
	padding: 10px;
	vertical-align: middle;
	text-align: left;
	border: 1px solid black;
	background-color: #c0c0c0;
	width: auto;
}
.fet_cellule_cadre_ligne {
	display: table-cell;
	margin: 1px;
	padding: 10px;
	vertical-align: middle;
	text-align: left;
	border: 1px solid black;
	background-color: #e0e0e0;
	width: auto;
}
/*P*/
p {
    font-family: comic sans ms;
    font-size: 14px;
    line-height: 20px;
    margin: 0 30px 3px 30px;
    font-style: normal;
    font-weight: normal;
    text-align: justify;
}
/*TOC*/
.fet_toc {
    font-family: comic sans ms;
    /*font-size: 14px;*/
    /*line-height: 22px;*/
    color: #000000;
    /*font-style:normal;*/
    /*font-weight:normal;*/
    /*padding-left :10px;*/
    /*margin: 0 30px 3px 30px;*/
}
ol {
	list-style-type:none;
    font-family: comic sans ms;
    font-size: 14px;
    font-weight: normal;
    padding-left: 10px;
    font-style: normal;
    text-align: justify;
    line-height: 20px;
    margin: 5px 0px 2px 30px;
}
ul {
    font-family: comic sans ms;
    font-size: 14px;
    font-weight: normal;
    padding-left: 30px;
    font-style: normal;
    text-align: justify;
    line-height: 20px;
    margin: 5px 0px 2px 30px;
    list-style-type: circle;
}
li {
    font-family: comic sans ms;
    /*font-size: 0.9em;*/
    font-size: 14px;
    /*font-weight: normal;*/
    /*line-height: 20px;*/
    /*margin: 0 30px 3px 30px;*/
    /*font-style: normal;*/
    /*text-align: justify;*/
}

.fet_exercices {
    list-style-type: decimal;
    line-height: 30px;
}

/*FORMULAS*/
.fet_formula {
    font-family: comic sans ms;
   font-size: larger;
   line-height: 40px;
   margin: 0px 0px 0px 35px;
   color: #000000;
   font-style: normal;
   font-weight: normal;
   padding: 10px 10px 10px 10px;
   display: inline-block;
   text-align: center;
   background-color: LightSalmon;
}
/* .fet_formula { */
    /* font-family:Times-Bold,sans-serif; */
    /* font-size:28px;	 */
    /* line-height:40px; */
    /* margin:0px 0px 0px 0px;	 */
    /* color:#A52A2A; */
/* } */

/*PERSONS*/
.fet_hominem {
    border-collapse: collapse;
    font-family: comic sans ms;
    font-size: 14px;
    line-height: 20px;
    margin-top: 0px;
    margin-bottom: 0px;
    margin-left: auto;
    margin-right: auto;
    text-align: justify;
    padding: 10px 30px 10px 30px;
    background-color: NavajoWhite
}

/*UNITS*/
.fet_unitatis {
    border-collapse: collapse;
    font-family: comic sans ms;
    font-size: 14px;
    line-height: 20px;
    margin-top: 0px;
    margin-bottom: 0px;
    margin-left: auto;
    margin-right: auto;
    width: 75% ;
    text-align: justify;
    background-color: LimeGreen;
}
</style>
<style>
.tableInvisible{border:none; border-collapse:collapse;}
a
{
	color:#000000;
	text-decoration:none;
	}
/*NORMAL TEXT*/
/* .navbar-ul */
/* { */
	/* list-style-type: none; */
	/* margin: 0; */
	/* padding: 0; */
	/* overflow: hidden; */
	/* background-color: #f3f3f3; */
	/* position: fixed; */
	/* top: 0; */
	/* width: 100%;  */
/* } */
.navbar-ul-top
{
    font-family: comic sans ms;
	list-style-type: none;
	margin: 0;
	padding: 0;
	overflow: hidden;
	background-color: #f3f3f3;
	position: fixed;
	top: 0;
	width: 100%;
}
.navbar-ul-bottom
{
    font-family: comic sans ms;
	list-style-type: none;
	margin: 0;
	padding: 0;
	overflow: hidden;
	background-color: #f3f3f3;
	position: fixed;
	bottom: 0;
	width: 100%;
}
h1
{
    font-family: comic sans ms;
    font-size:28px;	
	line-height:40px;
	margin:0px 0px 0px 0px;	
	color:#000000;
	font-style:normal;
	font-weight:normal;	
	padding: 10px 30px 10px 30px;
	background-color: #28bce1;
}
h1.reference{margin-bottom:50px}
h2, 
.h2
{
    font-family: comic sans ms;
    font-size:22px;	
	line-height:26px;
	margin:50px 30px 25px 30px;
	color:#000000;
	font-style:normal;
	font-weight:normal;
	background-color: #28bce1;
	padding:10px 10px 10px 10px;	
}



h3
{
    font-family: comic sans ms;
    font-size:20px;	
	line-height:22px;   
	margin:35px 30px 20px 30px;
	color:#000000;
	font-style:normal;
	font-weight:normal;	
	/*background-color: #28bce1;*/
    padding: 10px 10px 10px 10px;
	
}


h4
{
    font-family: comic sans ms;
    font-size:18px;	
	line-height:20px;   
	margin:35px 30px 15px 30px;
	color:#000000;
	font-style:normal;
	font-weight:bold;	
    padding: 10px 0px 10px 0px;
	
}

p.text
{
    font-family: comic sans ms;
    font-size:14px;	
	line-height:20px;
	margin:0 30px 3px 30px;
    font-style:normal;
	font-weight:normal;
	text-align:justify;
}
.p_figcaption
{
    font-family: comic sans ms;
    font-size:11px;	
	line-height:20px;
	margin:0 30px 3px 30px;
    font-style:normal;
	font-weight:normal;
	text-align:center;
}
.p_titre_en_petit
{
    font-family: comic sans ms;
    font-size:12px;	
    font-style:normal;
    font-weight:normal;
}
img{
	height:auto;
	width:auto;
	max-width:95%;
	max-height:95%;
	clip-path: inset(2px);
}


.imagecontainer {padding: 0; text-align: center; overflow: auto;margin:30px auto 5px auto;}
.imagecontainer.w50 {width:50%}
.imagecontainer.w80 {width:80%}
.copyright
{
    font-family: comic sans ms;
    font-size:14px;	
	margin:3px;
    font-style:normal;
	font-weight:normal;
	text-align:center;
}
</style>
<style>
.button,
.textarea,
.textareasin,
.textareacos,
.textareaangle,
.textareatension,
.textareaphi,
.textareaph1,
.textareaph2,
.textareaph3,
.canvas,
.btncheck,
.button-show,
.info-container, 
.info-txt-container, 
.info-container-in, 
.info-container-in-bottom, 
.slide-container,
.hidenbutton {
    font-family: comic sans ms;
	font-size: 14px;
}
.button,
.button-show,
.button_plus_minus ,
.button_plus_minus-space
{
	background-color: #c4c4c0; 
	border-color : #b2b29c;
	border-radius: 8px;
	border-style : solid;
	border-width : 1px;
	color: black;
	display: inline-block;
	font-size: 16px;
	margin: 5px 0px 5px 0px;
	text-align: center;
	text-decoration: none;
}
.button:hover {
	background-color: #ffffe0;
	cursor: pointer;
}
.button_plus_minus,
.button_plus_minus-space
 {
	font-weight: bold;
	font-size: 12px;
	width : 40px;
	border-radius: 4px;
	padding: 8px 8px 8px 8px;
	text-align: center;
    border: 1px solid black; 
}
.button_plus_minus:hover {
	background-color: #ffffe0;
	cursor: pointer;
}
.button_plus_minus-space:hover {
	background-color: #ffffe0;
	cursor: pointer;
}
.button_plus_minus-space
 {
	margin-left: 25px;
}		
.button-show {
    text-align: center;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    background-color: white;
    color: black;
    margin: 0px 2px 0px 2px;
    padding: 8px 32px;
    border: 2px solid black; 
	border-radius: 8px;
}
.button-show:hover {
	background-color: grey;
	cursor: pointer;
}
.button-go {
	background-color: #b9b900; 
}
.btncheck
 {
	margin-left: 10px;
}		
.btncheck:hover {
	background-color: lightgray;
	cursor: pointer;
	}	
.textarea,
.textareasin,
.textareacos,
.textareaangle,
.textareatension,
.textareaphi,
.textareaph1,
.textareaph2,
.textareaph3,
.oscillo,
.canvas	{
	background-color: #ebfaff; 
	border-color : #2a7189;
	border-radius: 0px;
	border-style : solid;
	border-width : 1px;
	color: black;
	padding: 10px 1px;
	text-align: center;
	text-decoration: none;
	display: inline-block;
	font-size: 14px;
	margin: 2px 1px;
/*	float : left;
*/	cursor: default;
}
.textareasin,
.textareacos,
.textareaangle,
.textareatension,
.textareaphi,
.textareaph1,
.textareaph2,
.textareaph3{
	border-radius: 6px;
	margin: 3px 5px 0px 5px;
	padding: 10px 2px 10px 2px;
	vertical-align: middle;
	width: 90px;
}

.textareasin {
	color: #003bff;
	font-weight: bold;
	
}
.textareacos {
	color: #ff4500;
	font-weight: bold;
}
.textareaangle {
	color: #00baff;
	font-weight: bold;
}
.textareatension {
	color: black;
	font-weight: bold;
}
.textareaph1 {
	color: #ff4500;
	font-weight: bold;
}
.textareaph2 {
	color: #0a97ee;
	font-weight: bold;
}
.textareaph3 {
	color: #32cd32;
	font-weight: bold;
}
.textareaphi {
	color: black;
	font-weight: bold;
}
.canvas	{
	float : left;
}
.slide-container,
.info-container,
.info-txt-container,
.info-container-in {
	border-radius: 5px;
	background-color: #ebfaff;
	border : 1px #2a7189 solid;
	padding : 5px;
	width: 100px;
	margin : 2px;
	display: inline-block;
	text-align : center;
}
.slide-container {
	margin: 5px 0px 5px 0px;
	padding-top: 10px;
	width: auto;
	height: auto;
	background-color: lightblue;
}
.slider {
    width: 98%;
	height : 15px;
	padding-top: 0px;
	margin: 0px;
	background-color: gray;
    opacity: 0.6; 
}
.slider:hover {
	cursor: pointer;
	color : red;
    opacity: 1; 
}
.info-container {
	background-color: #d9e8d9; 
	width: auto;
}
.info-txt-container {
	background-color: white;
	width: auto;
	text-align: left;
	border: none;
    vertical-align: middle;
	padding : 0px;
	cursor : default;
	}
.info-container-in {
	background-color: #3a613a;
	width: auto;
	color : white;
	font-weight: bold;
	margin : 0px 0px 3px 0px;
}
.lbl-slider {
	padding : 5px 0px 0px 0px;
	margin: 0px;
	cursor : default;
}
.empty_space {
	width : 5px;
	border : none;
	display: inline-block;
}
.oscillo {
	border-radius: 10px;
}
.fet_tableau {
    display: table;
    /*width: 55% ;*/
    margin: 5px;
    padding: 0px;
}
.fet_ligne {
	display: table-row;
/*	margin: 0px;
*/	padding: 0px;
}

.fet_cellule,
.fet_cellule_canvas,
.fet_cellule_fap,
.fet_cellule_logo,
.fet_cellule_entree_valeurs,
.fet_cellule_comment,
.fet_cellule_oscillo,
.fet_cellule_cdes
 {
	display: table-cell;
	vertical-align: top;
	text-align: center;
	padding: 5px;
	padding-top: 20px;
	padding-bottom: 20px;
	/* width: 10%; */
	/*height: auto;*/
    /*border: 1px solid red;  */
    font-family: comic sans ms;
	font-size: 12px;
}
.fet_cellule_oscillo
 {
	padding: 0px;
	padding-top: 1px;
	padding-bottom: 1px;
}
.fet_cellule,
.fet_cellule_comment
{
    border: 1px solid blue;  
}
.fet_cellule
{
    border-left: 1px solid black;  
    border-right: 1px solid black;  
    /*border-collapse: collapse;*/
}
.fet_cellule + .fet_cellule
{
	border-left: none;
}
.fet_cellule_comment 
{
	padding-top: 2px;
	padding-bottom: 2px;
/*    border-top: 1px solid black;  
*/}
.fet_cellule_canvas {
/*	padding-left: 5px;
	padding-right: 5px;
*//*	margin-left: 30px;
	margin-right: 30px;
*/	vertical-align: top;
	text-align: left;
	padding-top: 5px;
	padding-bottom: 5px;
/*	width: auto; 
*/	/*border:2px solid #d3d3d3;	*/
	/*height: auto;*/
}
.fet_cellule_fap {
	vertical-align: top;
	padding-top: 20px;
	padding-bottom: 2px;
	padding-left: 40px;
	/*width: 30.5%;*/
}
.fet_cellule_logo {
	vertical-align: bottom;
	text-align: right;
	width: 5%;
	height: 5%;
}
.fet_cellule_entree_valeurs
 {
	text-align: center;
	width: 200px;
	height: auto;
/*	padding-left: 0px;
*/	/*border:1px solid gray;*/
	/*margin-left: 10px;*/
}
.fet_cellule_oscillo
{
    border: 1px solid orange;  
}
.fet_cellule_fap
{
    border: 1px solid yellow;  
}
.fet_cellule_cdes
{
    border: 1px solid magenta;  
}
.fet_cellule_canvas 
{
    border: 1px solid blue;  
}
.fet_ligne {
    border: 1px solid green;  
}
.fet_ligne {
    border: 1px solid green;  
}
.fet_tableau {
    border: 1px solid black;  
}
.fet_tableau + .fet_tableau {
    border: 0px ;  
}
.fet_cellule_oscillo,
.fet_cellule_fap,
.fet_cellule_logo,
.fet_cellule_cdes,
.fet_cellule_canvas,
.fet_ligne,
.fet_tableau
{
    border: 0px;  
}
.fet_cellule_cdes
{
	background-color: #e9e9ec;
    border-bottom: 1px solid black;  
    border-right: 1px solid black;  
    border-top: 1px solid black;  
	border-radius: 0px 10px 10px 0px;
	padding-left: 10px;
	padding-right:20px;
}
.fet_cellule_canvas 
{
	background-color: #e9e9ec;
    border-bottom: 1px solid black;  
    border-left: 1px solid black;  
    border-top: 1px solid black;  
	border-radius: 10px 0px 0px 10px;
	padding-right:5px;
}



</style>
</head>
<body>
    <h2>Animation : fréquence, amplitude, phase</h2>
    <div class="fet_tableau" id="tableau_id">
        <div class="fet_ligne">
            <div class="fet_cellule_canvas" id="cellule_canvas_id">
                <canvas id="canvas_display_id">
                    Holala !! ce browser ne supporte pas les animations
                    <br/>
                </canvas>
            </div>
            <div class="fet_cellule_cdes" id="cellule_cde_oscillo_id">
                <div class="fet_ligne">
                    <div class="fet_cellule_oscillo" id="cell_oscillo_cde_vdiv_id">
                        <div class="info-container-in" id="cde_volt_div_id">
                            <p id="txt_volt_div_id">
                                100 V/div
                            </p>
                            <button class="button_plus_minus" type="button" onclick="btnVoltMoins()">
                                -
                            </button>
                            <button class="button_plus_minus" type="button" onclick="btnVoltPlus()">
                                +
                            </button>
                        </div>
                    </div>
                </div>
                <div class="fet_ligne">
                    <div class="fet_cellule_oscillo" id="cell_oscillo_cde_msdiv_id">
                        <div class="info-container-in" id="cde_ms_div_id">
                            <p id="txt_ms_div_id">
                                2 ms/div
                            </p>
                            <button class="button_plus_minus" type="button" onclick="btnDivMoinsNew()">
                                -
                            </button>
                            <button class="button_plus_minus" type="button" onclick="btnDivPlusNew()">
                                +
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="fet_cellule_fap" id="cellule_fap_id">
                <div class="fet_ligne" id="cellule_tension_id">
                    <div class="slide-container">
                        <label>
                            <input class="slider" id="slide_ampl_id" type="range" min="0" max="600" value="340" onchange="displayValue()"/>
                        </label>
                        <p class="lbl-slider" id="txt_ampl_id">
                            Amplitude
                        </p>
                    </div>
                    <br/>
                    <div class="info-txt-container" id="txt_amplval_id">
                        <p>
                            U
                            <sub>
                                efficace
                            </sub>
                            = 240V
                            <br/>
                            U
                            <sub>
                                crête
                            </sub>
                            = 325V
                            <br/>
                            U
                            <sub>
                                pp
                            </sub>
                            = 650V
                        </p>
                    </div>
                </div>
                <br/>
                <div class="fet_ligne" id="cellule_frequence_id">
                    <div class="slide-container">
                        <label>
                            <input class="slider" id="slide_freq_id" type="range" min="1" max="1000" value="50" onchange="displayValue()"/>
                        </label>
                        <p class="lbl-slider" id="txt_freq_id">
                            Fréquence
                        </p>
                    </div>
                    <br/>
                    <div class="info-txt-container" id="txt_freqval_id">
                        <p>
                            Fréquence = 50 Hz
                            <br/>
                            Période = 20 ms
                        </p>
                    </div>
                    <br/>
                </div>
                <br/>
                <div class="fet_ligne" id="cellule_phase_id">
                    <div class="slide-container">
                        <label>
                            <input class="slider" id="slide_phase_id" type="range" min="0" max="360" value="0" onchange="displayValue()"/>
                        </label>
                        <p class="lbl-slider" id="txt_phase_id">
                            Phase
                        </p>
                    </div>
                    <br/>
                    <div class="info-txt-container" id="txt_phaseval_id">
                        <p>
                            Phase = 0 deg
                            <br/>
                            Phase = 0 rad
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        // Variables globales

         // affichage des éléments
        const show_tension = true;
        const show_frequence = true;
        const show_phase = true;
        const show_oscillo = true;

         // ******************************************************************
        const color_fond_ecran = "#d9e8d9";
        const color_divison_ecran = "#3a613a";
        const color_border_ecran = "#243c24";

        const color_courbe_1 = "#ff4500";
        const color_courbe_2 = "#00baff";
        const sinus_ref_color = "#90bae4"; //"#b0ceec"; //"#32cd32"; // LimeGreen
        const color_curseur = "#00ff45";

         // dimensions de reference
        var xy_margin;
        var line_width;
        var resizing_ok = false;

         // dimension des éléments
        var r_display_x;
        var x_0;
        var x_min;
        var x_max;

        var r_display_y;
        var y_0;
        var y_min;
        var y_max;

        var r_base_x;
        var r_base_y;

         // reglages oscillosope
        var nbre_grid = 10;
        var volt_div = 100;
        var ms_div = 2;
        var amp_max = volt_div * 8;
        var t_max = ms_div * nbre_grid;

         // valeurs courbes
        var freq;
        var amp;
        var phase;

         // Initialisations

         <!-- document.getElementsByTagName("body")[0].onresize = function() { -->
         <!-- onResizeActionOscillo() -->
         <!-- }; -->

        const sleep_time = 100;
        const id_display_values = setInterval(onResizeActionOscillo, sleep_time);

        const tab_main = document.getElementById("tableau_id");
        const canvas_element = document.getElementById("canvas_display_id");
        const ctx = canvas_element.getContext("2d");

        const lbl_amplval = document.getElementById("txt_amplval_id");
        const lbl_ampl = document.getElementById("txt_ampl_id");
        const slide_ampl = document.getElementById("slide_ampl_id");

        const lbl_freqval = document.getElementById("txt_freqval_id");
        const lbl_freq = document.getElementById("txt_freq_id");
        const slide_freq = document.getElementById("slide_freq_id");


        const lbl_phaseval = document.getElementById("txt_phaseval_id");
        const lbl_phase = document.getElementById("txt_phase_id");
        const slide_phase = document.getElementById("slide_phase_id");

        const lbl_volt = document.getElementById("txt_volt_div_id");
        const lbl_div = document.getElementById("txt_ms_div_id");

        const cel_canvas = document.getElementById("cellule_canvas_id");
        const cel_cde_osc = document.getElementById("cellule_cde_oscillo_id");
        const cel_fap = document.getElementById("cellule_fap_id");

        const cel_cde_osc_vdiv = document.getElementById("cell_oscillo_cde_vdiv_id");
        const cel_cde_osc_msdiv = document.getElementById("cell_oscillo_cde_msdiv_id");

        const cel_tension = document.getElementById("cellule_tension_id");
        const cel_frequence = document.getElementById("cellule_frequence_id");
        const cel_phase = document.getElementById("cellule_phase_id");

        const cde_volt_div = document.getElementById("cde_volt_div_id");
        const cde_ms_div = document.getElementById("cde_volt_div_id");

        // var ms_div_list = new Array(1000, 500, 200, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01, 0.005, 0.002, 0.001)
        var ms_div_list = new Array(1000, 500, 200, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1)

        onResizeActionOscillo();
//<![CDATA[
// Fonction de handling de l'affichage
// ******************************************************************

function onResizeActionOscillo() {
	

    if (show_oscillo) {
        cel_cde_osc.style.display = "table-cell";
    } else {
        cel_cde_osc.style.display = "none";
        cel_canvas.style.borderRight = "1px solid black";
        cel_canvas.style.borderRadius= "10px 10px 10px 10px";
  }

    if (show_tension) {
        cel_tension.style.display = "table-cell";
    } else {
        cel_tension.style.display = "none";
    }

    if (show_frequence) {
        cel_frequence.style.display = "table-cell";
    } else {
        cel_frequence.style.display = "none";
    }

    if (show_phase) {
        cel_phase.style.display = "table-cell";
    } else {
        cel_phase.style.display = "none";
    }

    // var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    // var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    // var w0 = parseInt(0.95 * window.innerWidth);
    // var h0 = parseInt(0.95 * window.innerHeight);
    var scale_factor = 0.95;
    var w0 = parseInt(scale_factor * window.innerWidth);
    var h0 = parseInt(scale_factor * window.innerHeight);

    xy_factor = 1.2;
    h_factor = 0.75;
    if (h0 <= w0) {
        h1 = h0 * h_factor;
        w1 = h1 * xy_factor ;
    } 
    else {
        h1 = w0 * h_factor;
        w1 = h1 * xy_factor;
    }

    cel_tension.width = h1 / 3 ;
    cel_phase.width = h1 / 3 ;
    cel_frequence.width = h1 / 3 ;

    const f_reduction = 2;
    tab_main.width = f_reduction * w1 + "px";

    canvas_element.height = h1;
    canvas_element.width = w1;

    cel_cde_osc_vdiv.style.paddingTop = "5px" ;
    cel_cde_osc_msdiv.style.paddingTop = "10px" ;

    xy_margin = 5;
    line_width = 1;

    ctx.clearRect(0, 0, w0, h0);
    ctx.stroke();

    // dimension des éléments
    r_display_x = (w0 - 2 * xy_margin - 2 * line_width);
    x_0 = (w0 / 2);
    x_min = (-r_display_x / 2);
    x_max = (r_display_x / 2);

    r_display_y = (h0 - 2 * xy_margin - 2 * line_width);
    y_0 = (h0 / 2);
    y_min = (-r_display_y / 2);
    y_max = (r_display_y / 2);

    displayValueOscillo();
}

function displayValueOscillo() {

    amp_crete = parseInt(slide_ampl.value);
    amp_eff = parseInt(amp_crete / Math.sqrt(2));
    amp_pp = parseInt(amp_crete * 2);
    freq = parseInt(slide_freq.value);
    periode = (1000 / freq).toPrecision(3);
    phase = parseInt(slide_phase.value);
    lbl_amplval.innerHTML = "U<sub>efficace</sub> = " + amp_eff + "V<br/>U<sub>crête</sub> = " + amp_crete + "V<br/>U<sub>pp</sub> = " + amp_pp + "V";
    lbl_ampl.innerHTML = "Amplitude<br/>[" + String(volt_div) + " V/div]";
    lbl_freqval.innerHTML = "Fréquence = " + freq + " Hz<br/>Période = " + periode + " ms";
    lbl_freq.innerHTML = "Fréquence<br/>[" + String(ms_div) + " ms/div]";

    lbl_phaseval.innerHTML = "Phase = " + phase + " \u00b0<br/>Phase = " + (phase / 360 * 2 * Math.PI).toFixed(2) + " rad";
    angle_div = parseInt(360 / periode * ms_div);
    lbl_phase.innerHTML = "Phase<br/>[" + String(angle_div) + " \u00b0/div]";

    drawOscilloGrid(ctx, r_display_x, r_display_y, xy_margin);
    drawSinusOscillo();
}

// Fonction de l'animation
// ******************************************************************

// afficher la grille
function drawOscilloGrid(ctx, r_display_width, r_display_height, xy_zero) {

    // dessiner la face avant de l'oscillosope
    // le cadre
    ctx.strokeStyle = color_border_ecran;
    ctx.fillStyle = color_fond_ecran;
    ctx.lineWidth = line_width;

    ctx.beginPath();
    ctx.rect(xy_zero, xy_zero, r_display_width, r_display_height);
    ctx.stroke();
    ctx.fillRect(xy_zero, xy_zero, r_display_width, r_display_height);
    ctx.fill();

    // la grille
    ctx.translate(x_0, y_0);
    ctx.strokeStyle = color_divison_ecran;
    // divisions verticales
    ctx.setLineDash([3, 3]);
    ctx.beginPath();
    x_step = (r_display_width) / nbre_grid;
    i_min = -parseInt(nbre_grid / 2);
    i_max = nbre_grid - i_min;
    for (i = i_min; i < i_max; i++) {
        ctx.moveTo(i * x_step, y_min);
        ctx.lineTo(i * x_step, y_max);
    }
    ctx.stroke();

    ctx.beginPath();
    ctx.setLineDash([]);
    ctx.moveTo(0, y_min);
    ctx.lineTo(0, y_max);
    ctx.stroke();

    // divisions horizontales
    ctx.setLineDash([3, 3]);
    ctx.beginPath();
    y_step = (r_display_y) / 8;
    for (i = -3; i < 4; i++) {
        ctx.moveTo(x_min, i * y_step);
        ctx.lineTo(x_max, i * y_step);
    }
    ctx.stroke();

    ctx.beginPath();
    ctx.setLineDash([]);
    ctx.moveTo(x_min, 0);
    ctx.lineTo(x_max, 0);
    ctx.stroke();

    ctx.translate(-x_0, -y_0);
}

// afficher le sinus
function drawSinusOscillo() {

    ctx.translate(x_0, y_0);

    var T;
    var t_max;
    var phi_max;
    var nbre_pts = freq;
    var i = 0;
    T = 1000 / freq;
    t_max = nbre_grid * ms_div;
    phi_max = 2 * Math.PI * t_max / T;
    amp_max = volt_div * 8;

    //sinus de reference sans dephasage
    ctx.strokeStyle = sinus_ref_color;
    ctx.lineWidth = line_width * 2;
    nbre_pts = 10000;

    phase_rad = 0; //phase/180*Math.PI;
    x_old = x_min;
    y_old = -Math.sin(phase_rad) * y_max * amp_crete / amp_max * 2;
    ctx.moveTo(x_old, y_old);
    ctx.beginPath();

    for (i = 0; i < nbre_pts; i++) {

        t = i / nbre_pts * t_max;
        phi_rad = t / t_max * phi_max; //+phase_rad;
        y_new = -Math.sin(phi_rad) * y_max * amp_crete / amp_max * 2;

        x_pos = i / nbre_pts;
        x_new = (x_min + x_pos * (x_max - x_min));

        if ((Math.abs(y_new) <= (y_max)) && (Math.abs(y_old) <= (y_max))) {
            ctx.moveTo(x_old, y_old);
            ctx.lineTo(x_new, y_new);
        }

        x_old = x_new;
        y_old = y_new;
    }
    ctx.stroke();
    ctx.lineWidth = line_width;

    // sinus avaec dephasage
    ctx.strokeStyle = color_courbe_1;
    ctx.lineWidth = line_width * 2;
    nbre_pts = 10000;

    phase_rad = phase / 180 * Math.PI;
    x_old = x_min;
    y_old = -Math.sin(phase_rad) * y_max * amp_crete / amp_max * 2;
    ctx.moveTo(x_old, y_old);
    ctx.beginPath();

    for (i = 0; i < nbre_pts; i++) {

        t = i / nbre_pts * t_max;
        phi_rad = t / t_max * phi_max + phase_rad;
        y_new = -Math.sin(phi_rad) * y_max * amp_crete / amp_max * 2;

        x_pos = i / nbre_pts;
        x_new = (x_min + x_pos * (x_max - x_min));

        if ((Math.abs(y_new) <= (y_max)) && (Math.abs(y_old) <= (y_max))) {
            ctx.moveTo(x_old, y_old);
            ctx.lineTo(x_new, y_new);
        }

        x_old = x_new;
        y_old = y_new;
    }
    ctx.stroke();
    ctx.lineWidth = line_width;


    ctx.translate(-x_0, -y_0);
}


// Fonction commandes
// ******************************************************************
function btnVoltPlus() {
    if (volt_div == 100) {
        volt_div = 200;
    }
    if (volt_div == 50) {
        volt_div = 100;
    }
    if (volt_div == 20) {
        volt_div = 50;
    }
    if (volt_div == 10) {
        volt_div = 20;
    }
    if (volt_div == 5) {
        volt_div = 10;
    }
    if (volt_div == 2) {
        volt_div = 5;
    }
    if (volt_div == 1) {
        volt_div = 2;
    }
    lbl_volt.innerHTML = volt_div + " V/div";
}

function btnVoltMoins() {
    if (volt_div == 2) {
        volt_div = 1;
    }
    if (volt_div == 5) {
        volt_div = 2;
    }
    if (volt_div == 10) {
        volt_div = 5;
    }
    if (volt_div == 20) {
        volt_div = 10;
    }
    if (volt_div == 50) {
        volt_div = 20;
    }
    if (volt_div == 100) {
        volt_div = 50;
    }
    if (volt_div == 200) {
        volt_div = 100;
    }
    lbl_volt.innerHTML = volt_div + " V/div";
}

function btnDivPlus() {
    if (ms_div == 5) {
        ms_div = 10;
    }
    if (ms_div == 2) {
        ms_div = 5;
    }
    if (ms_div == 1) {
        ms_div = 2;
    }
    if (ms_div == 0.5) {
        ms_div = 1;
    }
    if (ms_div == 0.2) {
        ms_div = 0.5;
    }
    if (ms_div == 0.1) {
        ms_div = 0.2;
    }
    lbl_div.innerHTML = ms_div + " ms/div";
}

function btnDivMoins() {
    if (ms_div == 0.2) {
        ms_div = 0.1;
    }
    if (ms_div == 0.5) {
        ms_div = 0.2;
    }
    if (ms_div == 1) {
        ms_div = 0.5;
    }
    if (ms_div == 2) {
        ms_div = 1;
    }
    if (ms_div == 5) {
        ms_div = 2;
    }
    if (ms_div == 10) {
        ms_div = 5;
    }
    lbl_div.innerHTML = ms_div + " ms/div";
}

// Fonction utilitaires
// ******************************************************************

function showHideElementOscillo() {

    show_phase = !show_phase;
    show_oscillo = !show_oscillo;
    show_logo = !show_logo;
    onResizeActionOscillo();
}
//]]>
    </script>

<br/></body>
</html>

